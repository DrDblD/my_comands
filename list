# ssh copy file
#       scp <source> <destination> 
# To copy a file from B to A while logged into B:

#       scp /path/to/file username@a:/path/to/destination

# To copy a file from B to A while logged into A:

#       scp username@b:/path/to/file /path/to/destination
# A->B logged A
        scp /home/atab/projects/my_comands/docker_get.sh atab@192.168.1.14:/home/atab/docker_get.sh


# VENV
     #    apt install python3-venv
     #    python3 -m venv env
     #    chmod u+x env/bin/activate
     #    source env/bin/activate
     python -m venv /tmp/tmp-env && source /tmp/tmp-env/bin/activate
     deactivate && rm -r /tmp/tmp-env

# ssh-key
NAME=$@
[ -n $NAME] && (ssh-keygen -f ~/.ssh/$NAME; cat $(find . -name $NAME.pub))
ssh-copy-id -i ~/.ssh/$NAME.pub user@server
sudo chmod 400 ~/.ssh/$NAME
echo "ssh -i ~/.ssh/$NAME user@server"

# git config
git config --global user.name "John Doe"
git config --global user.email johndoe@example.com
git config --global core.excludesfile ~/.gitignore_global
git config --global core.editor "code -r"
git config --global diff.tool vscode
git config --global difftool.vscode.cmd 'code --wait --diff $LOCAL $REMOTE'
git config --global merge.tool vscode
git config --global mergetool.vscode.cmd 'code --wait $MERGED'

# Network Manager
nmcli c edit id vpn # edit connection
nmcli c show id vpn # show connection
nmcli c up id vpn --ask # try to connect with passwords
sudo journalctl -f > log.journal # monitore log to file

# play with curl 
# The expression 2>&1 copies file descriptor 1 to location 2 , so any output written to 2 ("standard error") in the execution environment goes to standart output
curl -v -s https://URL 2>&1 | tee log.curl # to view and write
curl -v -s https://URL 2>&1 | tee log.curl > /dev/null # to only write

# jenkins cli
java -jar jenkins-cli.jar -s jenkins_URL -ssh -user ataburkin help
java -jar jenkins-cli.jar -s https://jenkins_URL -auth user:tocken help

https://github.com/cloudbees/jenkins-scripts
https://github.com/samrocketman/jenkins-script-console-scripts

find $(pwd -P) -name foldr -exec mv {} /tmp \;

# install some packages from dir
find $(pwd)/Загрузки/cades-linux-amd64/ -name *.rpm | xargs sudo rpm -ivh
find $(pwd)/Загрузки/cades-linux-amd64/ -name *.rpm | xargs sudo yum install
echo "$(pwd)/Загрузки/cades-linux-amd64/" | (read p1; find $p1 -name *.rpm | xargs sudo rpm -qp --requires >> $p1requieres.log)

echo -n "USER:PASSWORD" | base64 | awk '{print "{\n\t\"auths\"\: \{\n\t\t\"https://docker.poidem.ru/\"\: \{\n\t\t\t\"auth\"\: "$1" \n\t\t\} \n\t\} \n\}"}' > ~/.docker/config.json

# play with docker
docker build -t test-test . >> log.build
docker run --name container_ssh -i -t test-test
docker rm container_ssh
docker ps --all | grep /bin | awk '{print $1}' | xargs docker rm
docker images --all
docker images --all | grep none | awk '{print $3}' | xargs docker rmi

# gitlab-runer
docker volume create gitlab-runner-config
docker run --rm -it -v gitlab-runner-config:/etc/gitlab-runner gitlab/gitlab-runner:latest register
docker run -d --name gitlab-runner --restart always \
     -v gitlab-runner-config:/etc/gitlab-runner:Z \
     -v /var/run/docker.sock:/var/run/docker.sock \
     gitlab/gitlab-runner:latest

curl --header "PRIVATE-TOKEN: <gitl-token>" "https://gitlab.<domain>.ru/api/v4/runners/01"
curl --request POST --header "PRIVATE-TOKEN: <gitl-token>" "https://gitlab.<domain>/api/v4/projects/ops%2Ftomcat-base/runners" \
     --form "runner_id=32"
curl --request PUT --header "PRIVATE-TOKEN: <gitl-token>" "https://gitlab.<domain>/api/v4/runners/01" \
     --form "locked=true"
curl --request PUT --header "PRIVATE-TOKEN:  <gitl-token>" "https://gitlab.<domain>/api/v4/runners/32" \
     --form "tag_list=docker"

curl --header "PRIVATE-TOKEN: glpat-kbaADs1GgzRtPQni2ZZR" "https://gitlab.poidem.ru/api/v4/runners/38"
curl --header "PRIVATE-TOKEN: glpat-kbaADs1GgzRtPQni2ZZR" "https://gitlab.poidem.ru/api/v4/projects/ops%2Fjava-base/registry/repositories?tags=1"
curl --header "PRIVATE-TOKEN: glpat-kbaADs1GgzRtPQni2ZZR" "https://gitlab.poidem.ru/api/v4/projects/ci-testing%2Fob/runners"
curl --request PUT --header "PRIVATE-TOKEN: glpat-kbaADs1GgzRtPQni2ZZR" "https://gitlab.poidem.ru/api/v4/runners/99" \
     --form "tags=docker"
curl --request PUT --header "PRIVATE-TOKEN: glpat-kbaADs1GgzRtPQni2ZZR" "https://gitlab.poidem.ru/api/v4/runners/32" \
     --form "tag_list=docker"

https://www.cryptopro.ru/sites/default/files/products/cades/current_release_2_0/cades_linux_amd64.tar.gz

# nexus cli https://gitlab.com/thiagocsf/nexus3-cli
pip install nexus3-cli
nexus3 login -U <url> -u <username>
nexus3 repository list
nexus3 repository create hosted raw bin
mkdir -p /tmp/some/deep/test/path
touch /tmp/some/deep/test/file.txt /tmp/some/deep/test/path/other.txt
cd /tmp; nexus3 up some/ reponame/path/


# screen
screen -L -Logfile ~/$(date '+%d/%m/%Y').screen.log -t $(date '+%d/%m/%Y')

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF


https://github.com/southbridgeio/kubespray
https://github.com/kubernetes-sigs/kubespray
